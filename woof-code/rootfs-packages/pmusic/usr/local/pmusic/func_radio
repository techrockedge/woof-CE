#!/bin/bash
#pMusic - radio
#GPL - Copyright Sigmund Berglund

export TEXTDOMAIN=pmusic
export OUTPUT_CHARSET=UTF-8
. $APPDIR/func -reset_gtk
echo 0 > $WORKDIR/radio_splash
echo "pMusic" > $WORKDIR/radio_progresstext #text in progressbar
echo -n > $WORKDIR/radio_tmp2

build_db (){
	#check internet connection
	gettext 'Connecting' > $WORKDIR/radio_progresstext
	LC_ALL=C wget --spider --tries 1 -T 3  -F --max-redirect 0 $PING_SERVER 2> $WORKDIR/tmp
	if [[ "$(<$WORKDIR/tmp)" != *connected* ]]; then
		TXT1="<b>$(gettext 'Not able to connect to internet')</b>"
		. $APPDIR/box_ok
		exit
	fi
	#---
	echo -n > $WORKDIR/radio_tmp2
	#download 
	gettext 'Downloading package' > $WORKDIR/radio_progresstext
	LC_ALL=C wget --tries=1 -O $WORKDIR/radio_sure.zip http://rb2rs.freemyip.com/latest.zip
	unzip -p $WORKDIR/radio_sure.zip > $WORKDIR/radio_wget
	#build 
	grep -iE "m3u|mp3|aac|pls|ogg|winamp|:....\|" $WORKDIR/radio_wget > $WORKDIR/radio_tmp3
	gettext 'Building database' > $WORKDIR/radio_progresstext
	while read I; do
		IFS=$'\t' read NAME COL2 GENRE COUNTRY RADIO_LANGUAGE ADR  <<< "$I"
		GENRE=${GENRE/ /}
		[ "$ADR" ] && echo "${ADR}|${NAME}|${GENRE}|${COUNTRY}||||||||||${ADR}" >> $WORKDIR/radio_tmp2
	done < $WORKDIR/radio_tmp3 
	mv -f $WORKDIR/radio_tmp2 "$STORAGE_DIR"/index_radio
	rm $WORKDIR/radio_*
	#add favorites
	[ ! "`grep -F "$(gettext 'Radio Country')" "$STORAGE_DIR"/favorites`" ] && echo 'pmusic__radio_country|'$(gettext 'Radio Country')'|||||||||||||audio_url' >> "$STORAGE_DIR"/favorites
	[ ! "`grep -F "$(gettext 'Radio Genre')" "$STORAGE_DIR"/favorites`" ] && echo 'pmusic__radio_genre|'$(gettext 'Radio Genre')'|||||||||||||audio_url' >> "$STORAGE_DIR"/favorites
	#---
	$APPDIR/func -radio -country
	echo 100 > $WORKDIR/radio_splash
}

install_index (){
	gettext 'Downloading radio index' > $WORKDIR/splashtext
	$APPDIR/box_splash &
	#check internet connection
	LC_ALL=C wget --spider "$FTP_SERVER/pmusic_index_radio.gz" 2> $WORKDIR/tmp
	if [ "`grep -Ei "unable to resolve host|file does not exist" $WORKDIR/tmp`" ]; then
		#let's try the alternative ftp server
		LC_ALL=C wget --spider "$FTP_SERVER_2/pmusic_index_radio.gz" 2> $WORKDIR/tmp
		if [ "`grep -Ei "unable to resolve host|file does not exist" $WORKDIR/tmp`" ]; then
			sleep 0.2
			echo 100 > $WORKDIR/splash
			TXT1="<b>$(gettext 'No connection to server')</b>"
			. $APPDIR/box_ok
			exit
		else
			MY_SERVER="$FTP_SERVER_2"
			MY_USER="$FTP_USER_2"
			MY_PASSWORD="$FTP_PASSWORD_2"
		fi
	else
		MY_SERVER="$FTP_SERVER"
		MY_USER="$FTP_USER"
		MY_PASSWORD="$FTP_PASSWORD"
	fi
	#---
	rm "$STORAGE_DIR/index_radio"
	LC_ALL=C wget --tries=1 --user $MY_USER --password $MY_PASSWORD --output-document="$STORAGE_DIR/index_radio.gz" "$MY_SERVER/pmusic_index_radio.gz"
	gunzip -f "$STORAGE_DIR/index_radio.gz"
	#add favorites
	[ ! "`grep -F "$(gettext 'Radio Country')" "$STORAGE_DIR"/favorites`" ] && echo 'pmusic__radio_country|'$(gettext 'Radio Country')'|||||||||||||audio_url' >> "$STORAGE_DIR"/favorites
	[ ! "`grep -F "$(gettext 'Radio Genre')" "$STORAGE_DIR"/favorites`" ] && echo 'pmusic__radio_genre|'$(gettext 'Radio Genre')'|||||||||||||audio_url' >> "$STORAGE_DIR"/favorites
	#---
	$APPDIR/func -radio -country
	echo 100 > $WORKDIR/splash
}

export -f build_db install_index

S='
<window title="pMusic - '$(gettext 'Radio stations setup')'" icon-name="pmusic">
<vbox>
 '"$($APPDIR/func_svg -heading "$(gettext 'Radio stations')")"'
 <notebook labels=" '$(gettext 'Build database')' | '$(gettext 'Download prebuild')' ">
 <vbox>
  <text><label>"
'$(gettext 'Build a radio-station index based on the very recent info at radio-browser.info.

This index file is static, which means user can not edit it manually. To include new URLs, you should add it to pMusic Favorites or add it to the database at www.radio-browser.info. Choose streams in mp3/ogg format to ensure playback.')'
"</label></text>
  <hbox homogeneous="true"><hbox>
   <button name="highlight">
    <variable>BUTTON_BUILD</variable>
    <label>'$(gettext 'Build index')'</label>
    <input file icon="apply"></input>
    <action>build_db &</action>
    <action>disable:BUTTON_BUILD</action>
    <action>disable:BUTTON_INSTALL</action>
   </button>
   </hbox></hbox>
  <text><label>""</label></text>
  <progressbar>
   <input>while [ "$I" != "100" ]; do I=`cat '$WORKDIR'/radio_splash`; J=`cat '$WORKDIR'/radio_progresstext`; [ -f '$WORKDIR'/radio_tmp2 ] && NR=`grep -c ^ '$WORKDIR'/radio_tmp2`; echo $I; echo "$J ($NR added)"; sleep 0.5; done</input>
   <action type="exit">cancel</action>
  </progressbar>
  </vbox>
  <vbox>
  <text><label>"
'$(gettext 'This is a one-click download and install of a prebuilt radio-station index.

The index file will be 3Mb+ when installed, and give you access to thousands of radio stations. Be aware that this index may not be up to date.')'
"</label></text>
  <hbox homogeneous="true"><hbox>
   <button name="highlight">
    <variable>BUTTON_INSTALL</variable>
    <input file icon="apply"></input>
    <label>'$(gettext 'Install')'</label>
    <action>install_index</action>
    <action>EXIT:exit</action>
   </button>
  </hbox></hbox>
 </vbox>

 </notebook>
 <hbox>
  <text use-markup="true"><label>"<b>'$(gettext 'Last indexing')':</b>"</label></text>
  <text><input>find "'$STORAGE_DIR'/index_radio" -printf "%Td.%Tb %TY   (%TH:%TM)"</input></text>
  <text use-markup="true"><label>"  <b>'$(gettext 'Radio stations')':</b>"</label></text>
  <text><input>echo -n "$(grep -c ^ "'$STORAGE_DIR'/index_radio")"</input></text> ###echo -n corrects vertical alignment
  <button cancel></button>
 </hbox>
</vbox>
<action signal="hide">exit:cancel</action>
</window>'
export pmusic_radio=$(sed 's/###.*//' <<< "$S")
XDG_DATA_DIRS=$WORKDIR:$XDG_DATA_DIRS $GTKDIALOG -p pmusic_radio --styles=$APPDIR/themes/$THEME/gtk-3.0/gtk.css

#kill backends
PS="`LC_ALL=C ps -eo pid,command`"
for I in `LC_ALL=C grep -F 'build_db &' <<< "$PS" | awk '{print $1}'`; do kill -9 $I 2>> $STDERR; done
echo 100 > $WORKDIR/radio_splash #end loop
