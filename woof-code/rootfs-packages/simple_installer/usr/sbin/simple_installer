#!/bin/sh

. /etc/DISTRO_SPECS

TARGET="$1"
FSOPTS="$2"
[ -z "$FSOPTS" ] && FSOPTS="encrypt"

if [ -z "$TARGET" ]; then
	if [ -z "$DISPLAY" ]; then
		echo "Usage: $0 DEV"
		exit 1
	fi

	set -ex

	ENTRIES=
	for DEVPATH in /sys/class/block/*; do
		DEV="${DEVPATH##*/}"
		case "$DEV" in
		mmcblk[0-9]*p*|nvme[0-9]*n[0-9]*p*) continue ;;
		sd*[^0-9]) DRIVE="$DEVPATH" ;;
		mmcblk[0-9]*) DRIVE="${DEVPATH%p[0-9]*}" ;;
		nvme[0-9]*n[0-9]*) DRIVE="${DEVPATH%p[0-9]*}" ;;
		*) continue ;;
		esac
		if [ -z "$ENTRIES" ]; then
			ENTRIES="$DEV
`cat ${DRIVE}/device/model`"
		else
			ENTRIES="$ENTRIES
$DEV
`cat ${DRIVE}/device/model`"
		fi
	done

	TARGET=
	while [ -z "$TARGET" ]; do
		TARGET=`echo "$ENTRIES" | yad --title Installer --window-icon=/usr/share/pixmaps/puppy/puppy_install.svg --image="/usr/share/doc/puppylogo96.png" --text "Please select the device to install ${DISTRO_NAME} on:" --list --column=Name --column=Description --separator= --print-column=1`
	done

	JOURNALED="`yad --title Installer --window-icon=/usr/share/pixmaps/puppy/puppy_install.svg --image="/usr/share/doc/puppylogo96.png" --text "This will erase all data on ${TARGET}. Are you sure?" --form --field "Journaled file system:chk" --separator= --button="gtk-yes:0" --button="gtk-no:1" true`"
	if [ "$JOURNALED" = "TRUE" ]; then
		FSOPTS="encrypt"
	else
		FSOPTS="^has_journal,encrypt"
	fi

	exec rxvt -e sh -c "${0} ${TARGET} ${FSOPTS} && echo \"Done installing ${DISTRO_NAME} on ${TARGET}\" || echo \"Failed to install ${DISTRO_NAME} on ${TARGET}\"; read"
else
	set -ex
fi

case "${TARGET}" in
sd*)
	TARGETP1="/dev/${TARGET}1"
	TARGETP2="/dev/${TARGET}2"
	;;
*)
	TARGETP1="/dev/${TARGET}p1"
	TARGETP2="/dev/${TARGET}p2"
	;;
esac
TARGET="/dev/${TARGET}"

PARTPFIX="`readlink /mnt/home | sed -E -e 's/[0-9]+$//g' -e 's~^/mnt/~~'`"
ESP=`probepart | grep -E "^/dev/${PARTPFIX}[0-9]+\|vfat" | head -n 1 | cut -f 1 -d \|`

if [ -n "$ESP" ]; then
	parted --script ${TARGET} mklabel gpt
	blockdev --rereadpt ${TARGET}
	sleep 4

	mkdir -p /mnt/efi
	mount "$ESP" /mnt/efi

	parted --script ${TARGET} mkpart fat32 1MiB 261MiB
	parted --script ${TARGET} set 1 esp on
	parted --script ${TARGET} mkpart ext4 261MiB 100%
	blockdev --rereadpt ${TARGET}
	sleep 4
	mkfs.fat -F 32 ${TARGETP1}
	mkfs.ext4 -F -b 4096 -m 0 -O "${FSOPTS}" ${TARGETP2}

	mkdir -p /mnt/targetp1 /mnt/targetp2
	mount-FULL -o noatime ${TARGETP1} /mnt/targetp1
	install -D -m 644 /mnt/efi/EFI/BOOT/BOOTX64.EFI /mnt/targetp1/EFI/BOOT/BOOTX64.EFI
	install -m 644 /mnt/efi/EFI/BOOT/efilinux.cfg /mnt/targetp1/EFI/BOOT/efilinux.cfg
	install -m 644 /mnt/efi/EFI/BOOT/vmlinuz /mnt/targetp1/EFI/BOOT/vmlinuz
	PARTUUID=`blkid -s PARTUUID -o value ${TARGETP2}`
	if [ -e /mnt/efi/EFI/BOOT/initrd.gz ]; then
		install -m 644 /mnt/efi/EFI/BOOT/initrd.gz /mnt/targetp1/EFI/BOOT/initrd.gz

		if [ -e /mnt/efi/EFI/BOOT/ucode.cpio ]; then
			install -m 644 /mnt/efi/EFI/BOOT/ucode.cpio /mnt/targetp1/EFI/BOOT/ucode.cpio
			echo "-f 0:\EFI\BOOT\vmlinuz initrd=0:\EFI\BOOT\ucode.cpio initrd=0:\EFI\BOOT\initrd.gz root=PARTUUID=${PARTUUID} init=/frugalify rootfstype=ext4 rootwait rw" > /mnt/targetp1/EFI/BOOT/efilinux.cfg
		else
			echo "-f 0:\EFI\BOOT\vmlinuz initrd=0:\EFI\BOOT\initrd.gz root=PARTUUID=${PARTUUID} init=/frugalify rootfstype=ext4 rootwait rw" > /mnt/targetp1/EFI/BOOT/efilinux.cfg
		fi
	else
		if [ -e /mnt/efi/EFI/BOOT/ucode.cpio ]; then
			install -m 644 /mnt/efi/EFI/BOOT/ucode.cpio /mnt/targetp1/EFI/BOOT/ucode.cpio
			echo "-f 0:\EFI\BOOT\vmlinuz initrd=0:\EFI\BOOT\ucode.cpio root=PARTUUID=${PARTUUID} init=/frugalify rootfstype=ext4 rootwait rw" > /mnt/targetp1/EFI/BOOT/efilinux.cfg
		else
			echo "-f 0:\EFI\BOOT\vmlinuz root=PARTUUID=${PARTUUID} init=/frugalify rootfstype=ext4 rootwait rw" > /mnt/targetp1/EFI/BOOT/efilinux.cfg
		fi
	fi
	busybox umount /mnt/targetp1 2>/dev/null

	mount-FULL -o noatime ${TARGETP2} /mnt/targetp2
	[ ! -e /mnt/home/frugalify ] || install -m 755 /mnt/home/frugalify /mnt/targetp2/frugalify
	cp -a /mnt/home/*.sfs /mnt/targetp2/
	busybox umount /mnt/targetp2 2>/dev/null
	rmdir /mnt/targetp2

	busybox umount /mnt/efi 2>/dev/null
	rmdir /mnt/efi /mnt/targetp1

	sync
else
	parted --script ${TARGET} mklabel msdos
	blockdev --rereadpt ${TARGET}
	sleep 4

	parted --script ${TARGET} mkpart primary ext4 2048s 100%
	parted --script ${TARGET} set 1 boot on
	blockdev --rereadpt ${TARGET}
	sleep 4
	mkfs.ext4 -F -b 4096 -m 0 -O "${FSOPTS}" -L "${DISTRO_FILE_PREFIX}_bios" ${TARGETP1}

	mkdir -p /mnt/targetp1
	mount-FULL -o noatime ${TARGETP1} /mnt/targetp1
	extlinux -i /mnt/targetp1
	dd if=/usr/lib/EXTLINUX/mbr.bin of=${TARGET}
	install -m 644 /mnt/home/vmlinuz /mnt/targetp1/vmlinuz
	PARTUUID=`blkid -s PARTUUID -o value ${TARGETP1}`
	if [ -e /mnt/home/initrd.gz ]; then
		install -m 644 /mnt/home/initrd.gz /mnt/targetp1/initrd.gz

		if [ -e /mnt/home/ucode.cpio ]; then
			cp -f /mnt/home/ucode.cpio /mnt/targetp1/
			cat << EOF > /mnt/targetp1/extlinux.conf
DEFAULT ${DISTRO_FILE_PREFIX}

LABEL ${DISTRO_FILE_PREFIX}
	LINUX vmlinuz
	INITRD ucode.cpio,initrd.gz
	APPEND root=PARTUUID=$PARTUUID init=/frugalify rootfstype=ext4 rootwait rw
EOF
		else
			cat << EOF > /mnt/targetp1/extlinux.conf
DEFAULT ${DISTRO_FILE_PREFIX}

LABEL ${DISTRO_FILE_PREFIX}
	LINUX initrd.gz
	APPEND root=PARTUUID=$PARTUUID init=/frugalify rootfstype=ext4 rootwait rw
EOF
		fi
	else
		if [ -e /mnt/home/ucode.cpio ]; then
			cp -f /mnt/home/ucode.cpio /mnt/targetp1/
			cat << EOF > /mnt/targetp1/extlinux.conf
DEFAULT ${DISTRO_FILE_PREFIX}

LABEL ${DISTRO_FILE_PREFIX}
	LINUX vmlinuz
	INITRD ucode.cpio
	APPEND root=PARTUUID=$PARTUUID init=/frugalify rootfstype=ext4 rootwait rw
EOF
		else
			cat << EOF > /mnt/targetp1/extlinux.conf
DEFAULT ${DISTRO_FILE_PREFIX}

LABEL ${DISTRO_FILE_PREFIX}
	LINUX vmlinuz
	APPEND root=PARTUUID=$PARTUUID init=/frugalify rootfstype=ext4 rootwait rw
EOF
		fi
	fi
	[ ! -e /mnt/home/frugalify ] || install -m 755 /mnt/home/frugalify /mnt/targetp1/frugalify
	cp -a /mnt/home/*.sfs /mnt/targetp1/
	busybox umount /mnt/targetp1 2>/dev/null
	rmdir /mnt/targetp1

	sync
fi