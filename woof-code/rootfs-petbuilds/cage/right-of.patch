diff -rupN --exclude .git wlr-randr-orig/main.c wlr-randr/main.c
--- wlr-randr-orig/main.c	2021-10-03 09:25:10.822369470 +0300
+++ wlr-randr/main.c	2021-10-03 09:25:13.826369373 +0300
@@ -379,6 +379,7 @@ static const struct option long_options[
 	{"pos", required_argument, 0, 0},
 	{"transform", required_argument, 0, 0},
 	{"scale", required_argument, 0, 0},
+	{"right-of", required_argument, 0, 0},
 	{0},
 };
 
@@ -458,7 +459,8 @@ static void fixup_disabled_head(struct r
 }
 
 static bool parse_output_arg(struct randr_head *head,
-		const char *name, const char *value) {
+		const char *name, const char *value,
+		struct wl_list *heads) {
 	if (strcmp(name, "on") == 0) {
 		if (!head->enabled) {
 			fixup_disabled_head(head);
@@ -563,6 +565,40 @@ static bool parse_output_arg(struct rand
 		}
 
 		head->scale = scale;
+	} else if (strcmp(name, "right-of") == 0) {
+		bool found = false;
+		struct randr_head *current_head = NULL;
+		wl_list_for_each(current_head, heads, link) {
+			if (strcmp(current_head->name, value) == 0) {
+				found = true;
+				break;
+			}
+		}
+		if (!found) {
+			fprintf(stderr, "unknown output %s\n", value);
+			return false;
+		}
+		head->x = current_head->x;
+		head->y = current_head->y;
+		if (current_head->mode)
+			head->x += current_head->mode->width;
+		else
+			head->x += current_head->custom_mode.width;
+
+		// Find the leftmost output
+		struct randr_head *min_x = NULL;
+		current_head = NULL;
+		wl_list_for_each(current_head, heads, link) {
+			if (!min_x || (current_head->x < min_x->x)) {
+				min_x = current_head;
+			}
+		}
+
+		// Move it to x=0 and shift left all other outputs
+		current_head = NULL;
+		wl_list_for_each(current_head, heads, link) {
+			current_head->x -= min_x->x;
+		}
 	} else {
 		fprintf(stderr, "invalid option: %s\n", name);
 		return false;
@@ -648,7 +684,7 @@ int main(int argc, char *argv[]) {
 				return EXIT_FAILURE;
 			}
 
-			if (!parse_output_arg(current_head, name, value)) {
+			if (!parse_output_arg(current_head, name, value, &state.heads)) {
 				return EXIT_FAILURE;
 			}
 
